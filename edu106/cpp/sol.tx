Let's split all edges of the graph into several paths and cycles (each edge will belong to exactly one path or cycle). Each path and each cycle will be colored in an alternating way: the first edge will be red, the second- blue, the third--red, and so on. Since the graph is bipartite, each cycle can be colored in an alternating way. The main idea of the solution is to add the edges one by one, maintain the structure of cycles and paths, and make sure that for each vertex, at most one path starts/ends in it. If we are able to maintain this invariant, then the value of $|r(v)-b(v)|$ for every vertex will be minimum possible -- each cycle going through a vertex covers an even number of edges incident to it (half of them will be red, half of them will be blue); so if the degree of a vertex is odd, one path will have this vertex as an endpoint, and $|r(v)-b(v)|=1$; otherwise, it won't be an endpoint of any path, so $|r(v)-b(v)| = 0$.

Okay, how do we maintain this structure? Let's add edges one by one (even the original edges of the graph) and rebuild the structure in online mode. For each vertex, we will maintain the indicides of the paths that have this vertex as an endpoint. If some vertex has 2 or more paths as its endpoints, we can choose two of them and link them together. Whenever we add an edge from $x$ to $y$, we just create a new path and check if we can link together some paths that have $x$ or $y$ as their endpoints.

How do we link the paths togetehr? If we try to link a path with itself, it means that we try to close a cycle -- and when we do it, we just forget about the resulting cycle, its structure won't change in future queries. When we link a path with some other path, we might need to reverse and/or repaint the paths before merging them into one. There are at least two possible data structure we can use to do this:

either an implicit-key treap that supports reversing and repainting;

or a deque with small-to-large merging: whenever we try to link two paths together, we repaint and/or reverse the smaller one.