for more details please visit : https://codeforces.com/contest/1511/problems


__

![](//assets.codeforces.com/images/hsu.png)

![In English](//codeforces.org/s/87765/images/flags/24/gb.png) ![По-
русски](//codeforces.org/s/87765/images/flags/24/ru.png)

  

Educational Codeforces Round 107 (Rated for Div. 2)

The problem statement has recently been changed. View the changes.

×

A. Review Site

time limit per test

2 seconds

memory limit per test

256 megabytes

input

standard input

output

standard output

You are an upcoming movie director, and you have just released your first
movie. You have also launched a simple review site with two buttons to press —
upvote and downvote.

However, the site is not so simple on the inside. There are two servers, each
with its separate counts for the upvotes and the downvotes.

nn reviewers enter the site one by one. Each reviewer is one of the following
types:

  * type 11: a reviewer has watched the movie, and they like it — they press the upvote button; 
  * type 22: a reviewer has watched the movie, and they dislike it — they press the downvote button; 
  * type 33: a reviewer hasn't watched the movie — they look at the current number of upvotes and downvotes of the movie on the server they are in and decide what button to press. If there are more downvotes than upvotes, then a reviewer downvotes the movie. Otherwise, they upvote the movie. 

Each reviewer votes on the movie exactly once.

Since you have two servers, you can actually manipulate the votes so that your
movie gets as many upvotes as possible. When a reviewer enters a site, you
know their type, and you can send them either to the first server or to the
second one.

What is the maximum total number of upvotes you can gather over both servers
if you decide which server to send each reviewer to?

Input

The first line contains a single integer tt (1≤t≤1041≤t≤104) — the number of
testcases.

Then the descriptions of tt testcases follow.

The first line of each testcase contains a single integer nn (1≤n≤501≤n≤50) —
the number of reviewers.

The second line of each testcase contains nn integers r1,r2,…,rnr1,r2,…,rn
(1≤ri≤31≤ri≤3) — the types of the reviewers in the same order they enter the
site.

Output

For each testcase print a single integer — the maximum total number of upvotes
you can gather over both servers if you decide which server to send each
reviewer to.

Example

Input

Copy

    
    
    4
    1
    2
    3
    1 2 3
    5
    1 1 1 1 1
    3
    3 3 2
    

Output

Copy

    
    
    0
    2
    5
    2
    

Note

In the first testcase of the example you can send the only reviewer to either
of the servers — they'll downvote anyway. The movie won't receive any upvotes.

In the second testcase of the example you can send all reviewers to the first
server:

  * the first reviewer upvotes; 
  * the second reviewer downvotes; 
  * the last reviewer sees that the number of downvotes is not greater than the number of upvotes — upvote themselves. 

There are two upvotes in total. Alternatevely, you can send the first and the
second reviewers to the first server and the last reviewer — to the second
server:

  * the first reviewer upvotes on the first server; 
  * the second reviewer downvotes on the second server; 
  * the last reviewer sees no upvotes or downvotes on the second server — upvote themselves. 

The problem statement has recently been changed. View the changes.

×

B. GCD Length

time limit per test

2 seconds

memory limit per test

256 megabytes

input

standard input

output

standard output

You are given three integers aa, b and c.

Find two positive integers x and y (x>0, y>0) such that:

  * the decimal representation of x without leading zeroes consists of a digits; 
  * the decimal representation of y without leading zeroes consists of b digits; 
  * the decimal representation of gcd(x,y) without leading zeroes consists of c digits. 

gcd(x,y) denotes the greatest common divisor (GCD) of integers x and y.

Output x and y. If there are multiple answers, output any of them.

Input

The first line contains a single integer t (1≤t≤285) — the number of
testcases.

Each of the next t lines contains three integers a, b and c (1≤a,b≤9,
1≤c≤min(a,b)) — the required lengths of the numbers.

It can be shown that the answer exists for all testcases under the given
constraints.

Additional constraint on the input: all testcases are different.

Output

For each testcase print two positive integers — x and y (x>0, y>0) such that

  * the decimal representation of x without leading zeroes consists of a digits; 
  * the decimal representation of y without leading zeroes consists of b digits; 
  * the decimal representation of gcd(x,y) without leading zeroes consists of c digits. 

Example

Input

Copy

    
    
    4
    2 3 1
    2 2 2
    6 6 2
    1 1 1
    

Output

Copy

    
    
    11 492
    13 26
    140133 160776
    1 1
    

Note

In the example:

  1. gcd(11,492)=1
  2. gcd(13,26)=13
  3. gcd(140133,160776)=21
  4. gcd(1,1)=1

The problem statement has recently been changed. View the changes.

×

C. Yet Another Card Deck

time limit per test

2 seconds

memory limit per test

256 megabytes

input

standard input

output

standard output

You have a card deck of n cards, numbered from top to bottom, i. e. the top
card has index 1 and bottom card — index n. Each card has its color: the i-th
card has color ai.

You should process q queries. The j-th query is described by integer tj. For
each query you should:

  * find the highest card in the deck with color tj, i. e. the card with minimum index; 
  * print the position of the card you found; 
  * take the card and place it on top of the deck. 

Input

The first line contains two integers n and q (2≤n≤3⋅105; 1≤q≤3⋅105) — the
number of cards in the deck and the number of queries.

The second line contains n integers a1,a2,…,an (1≤ai≤50) — the colors of
cards.

The third line contains q integers t1,t2,…,tq (1≤tj≤50) — the query colors.
It's guaranteed that queries ask only colors that are present in the deck.

Output

Print q integers — the answers for each query.

Example

Input

Copy

    
    
    7 5
    2 1 1 4 3 3 1
    3 2 1 1 4
    

Output

Copy

    
    
    5 2 3 1 5 

Note

Description of the sample:

  1. the deck is [2,1,1,4,3_,3,1] and the first card with color t1=3 has position 5; 
  2. the deck is [3,2_,1,1,4,3,1] and the first card with color t2=2 has position 2; 
  3. the deck is [2,3,1_,1,4,3,1] and the first card with color t3=1 has position 3; 
  4. the deck is [1_,2,3,1,4,3,1] and the first card with color t4=1 has position 1; 
  5. the deck is [1,2,3,1,4_,3,1] and the first card with color t5=4 has position 5. 

The problem statement has recently been changed. View the changes.

×

D. Min Cost String

time limit per test

2 seconds

memory limit per test

256 megabytes

input

standard input

output

standard output

Let's define the cost of a string s as the number of index pairs i and j
(1≤i<j<|s|) such that si=sj and si+1=sj+1.

You are given two positive integers n and k. Among all strings with length n
that contain only the first k characters of the Latin alphabet, find a string
with minimum possible cost. If there are multiple such strings with minimum
cost — find any of them.

Input

The only line contains two integers n and k (1≤n≤2⋅105;1≤k≤26).

Output

Print the string s such that it consists of n characters, each its character
is one of the k first Latin letters, and it has the minimum possible cost
among all these strings. If there are multiple such strings — print any of
them.

Examples

Input

Copy

    
    
    9 4
    

Output

Copy

    
    
    aabacadbb
    

Input

Copy

    
    
    5 1
    

Output

Copy

    
    
    aaaaa

Input

Copy

    
    
    10 26
    

Output

Copy

    
    
    codeforces
    

The problem statement has recently been changed. View the changes.

×

E. Colorings and Dominoes

time limit per test

3 seconds

memory limit per test

512 megabytes

input

standard input

output

standard output

You have a large rectangular board which is divided into n×m cells (the board
has n rows and m columns). Each cell is either white or black.

You paint each white cell either red or blue. Obviously, the number of
different ways to paint them is 2w, where w is the number of white cells.

After painting the white cells of the board, you want to place the maximum
number of dominoes on it, according to the following rules:

  * each domino covers two adjacent cells; 
  * each cell is covered by at most domino; 
  * if a domino is placed horizontally (it covers two adjacent cells in one of the rows), it should cover only red cells; 
  * if a domino is placed vertically (it covers two adjacent cells in one of the columns), it should cover only blue cells. 

Let the value of the board be the maximum number of dominoes you can place.
Calculate the sum of values of the board over all 2w possible ways to paint
it. Since it can be huge, print it modulo 998244353.

Input

The first line contains two integers n and m (1≤n,m≤3⋅105; nm≤3⋅105) — the
number of rows and columns, respectively.

Then n lines follow, each line contains a string of m characters. The j-th
character in the i-th string is * if the j-th cell in the i-th row is black;
otherwise, that character is o.

Output

Print one integer — the sum of values of the board over all 2w possible ways
to paint it, taken modulo 998244353.

Examples

Input

Copy

    
    
    3 4
    **oo
    oo*o
    **oo
    

Output

Copy

    
    
    144
    

Input

Copy

    
    
    3 4
    **oo
    oo**
    **oo
    

Output

Copy

    
    
    48
    

Input

Copy

    
    
    2 2
    oo
    o*
    

Output

Copy

    
    
    4
    

Input

Copy

    
    
    1 4
    oooo
    

Output

Copy

    
    
    9
    

The problem statement has recently been changed. View the changes.

×

F. Chainword

time limit per test

3 seconds

memory limit per test

256 megabytes

input

standard input

output

standard output

A chainword is a special type of crossword. As most of the crosswords do, it
has cells that you put the letters in and some sort of hints to what these
letters should be.

The letter cells in a chainword are put in a single row. We will consider
chainwords of length m in this task.

A hint to a chainword is a sequence of segments such that the segments don't
intersect with each other and cover all m letter cells. Each segment contains
a description of the word in the corresponding cells.

The twist is that there are actually two hints: one sequence is the row above
the letter cells and the other sequence is the row below the letter cells.
When the sequences are different, they provide a way to resolve the ambiguity
in the answers.

You are provided with a dictionary of n words, each word consists of lowercase
Latin letters. All words are pairwise distinct.

An instance of a chainword is the following triple:

  * a string of m lowercase Latin letters; 
  * the first hint: a sequence of segments such that the letters that correspond to each segment spell a word from the dictionary; 
  * the second hint: another sequence of segments such that the letters that correspond to each segment spell a word from the dictionary. 

Note that the sequences of segments don't necessarily have to be distinct.

Two instances of chainwords are considered different if they have different
strings, different first hints or different second hints.

Count the number of different instances of chainwords. Since the number might
be pretty large, output it modulo 998244353.

Input

The first line contains two integers n and m (1≤n≤8, 1≤m≤109) — the number of
words in the dictionary and the number of letter cells.

Each of the next n lines contains a word — a non-empty string of no more than
5 lowercase Latin letters. All words are pairwise distinct.

Output

Print a single integer — the number of different instances of chainwords of
length m for the given dictionary modulo 998244353.

Examples

Input

Copy

    
    
    3 5
    ababa
    ab
    a
    

Output

Copy

    
    
    11
    

Input

Copy

    
    
    2 4
    ab
    cd
    

Output

Copy

    
    
    4
    

Input

Copy

    
    
    5 100
    a
    aa
    aaa
    aaaa
    aaaaa
    

Output

Copy

    
    
    142528942
    

Note

Here are all the instances of the valid chainwords for the first example:

![](https://espresso.codeforces.com/734575fe874c64a4857f821627aa6847ee50e306.png)

The red lines above the letters denote the segments of the first hint, the
blue lines below the letters denote the segments of the second hint.

In the second example the possible strings are: "abab", "abcd", "cdab" and
"cdcd". All the hints are segments that cover the first two letters and the
last two letters.

The problem statement has recently been changed. View the changes.

×

G. Chips on a Board

time limit per test

5 seconds

memory limit per test

512 megabytes

input

standard input

output

standard output

Alice and Bob have a rectangular board consisting of n rows and m columns.
Each row contains exactly one chip.

Alice and Bob play the following game. They choose two integers l and r such
that 1≤l≤r≤m and cut the board in such a way that only the part of it between
column l and column r (inclusive) remains. So, all columns to the left of
column l and all columns to the right of column r no longer belong to the
board.

After cutting the board, they move chips on the remaining part of the board
(the part from column l to column r). They make alternating moves, and the
player which cannot make a move loses the game. The first move is made by
Alice, the second — by Bob, the third — by Alice, and so on. During their
move, the player must choose one of the chips from the board and move it any
positive number of cells to the left (so, if the chip was in column i, it can
move to any column j<i, and the chips in the leftmost column cannot be
chosen).

Alice and Bob have q pairs of numbers Li and Ri. For each such pair, they want
to determine who will be the winner of the game if l=Li and r=Ri. Note that
these games should be considered independently (they don't affect the state of
the board for the next games), and both Alice and Bob play optimally.

Input

The first line contains two integers n and m (1≤n,m≤2⋅105) — the number of
rows and columns on the board, respectively.

The second line contains n integers c1,c2,…,cn (1≤ci≤m), where ci is the index
of the column where the chip in the i-th row is located (so, the chip in the
i-th row is in the ci-th column).

The third line contains one integer q (1≤q≤2⋅105).

Then q lines follow, the i-th of them contains two integers Li and Ri
(1≤Li≤Ri≤m).

Output

Print a string of q characters. The i-th character should be A if Alice wins
the game with l=Li and r=Ri, or B if Bob wins it.

Example

Input

Copy

    
    
    8 10
    1 3 3 7 4 2 6 9
    7
    2 3
    1 3
    1 4
    1 10
    5 10
    8 10
    9 10
    

Output

Copy

    
    
    BAAAAAB

  

Codeforces (c) Copyright 2010-2021 Mike Mirzayanov

The only programming contests Web 2.0 platform

