for more details please visit : https://codeforces.com/contest/1513/problems


__

![](//codeforces.org/s/21446/images/codeforces-logo-with-telegram.png)

![In English](//codeforces.org/s/21446/images/flags/24/gb.png) ![По-
русски](//codeforces.org/s/21446/images/flags/24/ru.png)

  

Divide by Zero 2021 and Codeforces Round #714 (Div. 2)

The problem statement has recently been changed. View the changes.

×

A. Array and Peaks

time limit per test

1 second

memory limit per test

256 megabytes

input

standard input

output

standard output

A sequence of nn integers is called a permutation if it contains all integers
from 11 to nn exactly once.

Given two integers nn and kk, construct a permutation aa of numbers from 11 to
nn which has exactly kk peaks. An index ii of an array aa of size nn is said
to be a peak if 1<i<n1<i<n and ai>ai−1ai>ai−1 and ai>ai+1ai>ai+1. If such
permutation is not possible, then print −1−1.

Input

The first line contains an integer tt (1≤t≤1001≤t≤100) — the number of test
cases.

Then tt lines follow, each containing two space-separated integers nn
(1≤n≤1001≤n≤100) and kk (0≤k≤n0≤k≤n) — the length of an array and the required
number of peaks.

Output

Output tt lines. For each test case, if there is no permutation with given
length and number of peaks, then print −1−1. Otherwise print a line containing
nn space-separated integers which forms a permutation of numbers from 11 to nn
and contains exactly kk peaks.

If there are multiple answers, print any.

Example

Input

Copy

    
    
    5
    1 0
    5 2
    6 6
    2 1
    6 1
    

Output

Copy

    
    
    1 
    2 4 1 5 3 
    -1
    -1
    1 3 6 5 4 2
    

Note

In the second test case of the example, we have array
a=[2,4,1,5,3]a=[2,4,1,5,3]. Here, indices i=2i=2 and i=4i=4 are the peaks of
the array. This is because (a2>a1(a2>a1, a2>a3)a2>a3) and (a4>a3(a4>a3,
a4>a5)a4>a5).

The problem statement has recently been changed. View the changes.

×

B. AND Sequences

time limit per test

2 seconds

memory limit per test

256 megabytes

input

standard input

output

standard output

A sequence of nn non-negative integers (n≥2n≥2) a1,a2,…,ana1,a2,…,an is called
good if for all ii from 11 to n−1n−1 the following condition holds true:
a1&a2&…&ai=ai+1&ai+2&…&an,

a1&a2&…&ai=ai+1&ai+2&…&an,

where && denotes the bitwise AND operation.

You are given an array aa of size nn (n≥2n≥2). Find the number of permutations
pp of numbers ranging from 11 to nn, for which the sequence ap1ap1, ap2ap2,
... ,apnapn is good. Since this number can be large, output it modulo
109+7109+7.

Input

The first line contains a single integer tt (1≤t≤1041≤t≤104), denoting the
number of test cases.

The first line of each test case contains a single integer nn
(2≤n≤2⋅1052≤n≤2⋅105) — the size of the array.

The second line of each test case contains nn integers a1,a2,…,ana1,a2,…,an
(0≤ai≤1090≤ai≤109) — the elements of the array.

It is guaranteed that the sum of nn over all test cases doesn't exceed
2⋅1052⋅105.

Output

Output tt lines, where the ii-th line contains the number of good permutations
in the ii-th test case modulo 109+7109+7.

Example

Input

Copy

    
    
    4
    3
    1 1 1
    5
    1 2 3 4 5
    5
    0 2 0 3 0
    4
    1 3 5 1
    

Output

Copy

    
    
    6
    0
    36
    4
    

Note

In the first test case, since all the numbers are equal, whatever permutation
we take, the sequence is good. There are a total of 66 permutations possible
with numbers from 11 to 33: [1,2,3][1,2,3], [1,3,2][1,3,2], [2,1,3][2,1,3],
[2,3,1][2,3,1], [3,1,2][3,1,2], [3,2,1][3,2,1].

In the second test case, it can be proved that no permutation exists for which
the sequence is good.

In the third test case, there are a total of 3636 permutations for which the
sequence is good. One of them is the permutation [1,5,4,2,3][1,5,4,2,3] which
results in the sequence s=[0,0,3,2,0]s=[0,0,3,2,0]. This is a good sequence
because

  * s1=s2&s3&s4&s5=0s1=s2&s3&s4&s5=0, 
  * s1&s2=s3&s4&s5=0s1&s2=s3&s4&s5=0, 
  * s1&s2&s3=s4&s5=0s1&s2&s3=s4&s5=0, 
  * s1&s2&s3&s4=s5=0s1&s2&s3&s4=s5=0. 

The problem statement has recently been changed. View the changes.

×

C. Add One

time limit per test

1 second

memory limit per test

256 megabytes

input

standard input

output

standard output

You are given an integer nn. You have to apply mm operations to it.

In a single operation, you must replace every digit dd of the number with the
decimal representation of integer d+1d+1. For example, 19121912 becomes
2102321023 after applying the operation once.

You have to find the length of nn after applying mm operations. Since the
answer can be very large, print it modulo 109+7109+7.

Input

The first line contains a single integer tt (1≤t≤2⋅1051≤t≤2⋅105) — the number
of test cases.

The only line of each test case contains two integers nn (1≤n≤1091≤n≤109) and
mm (1≤m≤2⋅1051≤m≤2⋅105) — the initial number and the number of operations.

Output

For each test case output the length of the resulting number modulo
109+7109+7.

Example

Input

Copy

    
    
    5
    1912 1
    5 6
    999 1
    88 2
    12 100
    

Output

Copy

    
    
    5
    2
    6
    4
    2115
    

Note

For the first test, 19121912 becomes 2102321023 after 11 operation which is of
length 55.

For the second test, 55 becomes 2121 after 66 operations which is of length
22.

For the third test, 999999 becomes 101010101010 after 11 operation which is of
length 66.

For the fourth test, 8888 becomes 10101010 after 22 operations which is of
length 44.

The problem statement has recently been changed. View the changes.

×

D. GCD and MST

time limit per test

2 seconds

memory limit per test

256 megabytes

input

standard input

output

standard output

You are given an array aa of nn (n≥2n≥2) positive integers and an integer pp.
Consider an undirected weighted graph of nn vertices numbered from 11 to nn
for which the edges between the vertices ii and jj (i<ji<j) are added in the
following manner:

  * If gcd(ai,ai+1,ai+2,…,aj)=min(ai,ai+1,ai+2,…,aj)gcd(ai,ai+1,ai+2,…,aj)=min(ai,ai+1,ai+2,…,aj), then there is an edge of weight min(ai,ai+1,ai+2,…,aj)min(ai,ai+1,ai+2,…,aj) between ii and jj. 
  * If i+1=ji+1=j, then there is an edge of weight pp between ii and jj. 

Here gcd(x,y,…)gcd(x,y,…) denotes the greatest common divisor (GCD) of
integers xx, yy, ....

Note that there could be multiple edges between ii and jj if both of the above
conditions are true, and if both the conditions fail for ii and jj, then there
is no edge between these vertices.

The goal is to find the weight of the minimum spanning tree of this graph.

Input

The first line contains a single integer tt (1≤t≤1041≤t≤104) — the number of
test cases.

The first line of each test case contains two integers nn (2≤n≤2⋅1052≤n≤2⋅105)
and pp (1≤p≤1091≤p≤109) — the number of nodes and the parameter pp.

The second line contains nn integers a1,a2,a3,…,ana1,a2,a3,…,an
(1≤ai≤1091≤ai≤109).

It is guaranteed that the sum of nn over all test cases does not exceed
2⋅1052⋅105.

Output

Output tt lines. For each test case print the weight of the corresponding
graph.

Example

Input

Copy

    
    
    4
    2 5
    10 10
    2 5
    3 3
    4 5
    5 2 4 9
    8 8
    5 3 3 6 10 100 9 15
    

Output

Copy

    
    
    5
    3
    12
    46
    

Note

Here are the graphs for the four test cases of the example (the edges of a
possible MST of the graphs are marked pink):

For test case 1

![](https://espresso.codeforces.com/fbd5f4536bec34a1dbc98dc3679bdd574a132274.png)

For test case 2

![](https://espresso.codeforces.com/f11ee0a476af52f30318753c5e9b66a86aad12dc.png)

For test case 3

![](https://espresso.codeforces.com/11ec1f337851b0eab129d6d349a04ca6223504f4.png)

For test case 4

![](https://espresso.codeforces.com/9c3e0e1143b65394c8cb776e7bc45b4e12d1b780.png)

The problem statement has recently been changed. View the changes.

×

E. Cost Equilibrium

time limit per test

1 second

memory limit per test

256 megabytes

input

standard input

output

standard output

An array is called beautiful if all the elements in the array are equal.

You can transform an array using the following steps any number of times:

  1. Choose two indices ii and jj (1≤i,j≤n1≤i,j≤n), and an integer xx (1≤x≤ai1≤x≤ai). Let ii be the source index and jj be the sink index. 
  2. Decrease the ii-th element by xx, and increase the jj-th element by xx. The resulting values at ii-th and jj-th index are ai−xai−x and aj+xaj+x respectively. 
  3. The cost of this operation is x⋅|j−i|x⋅|j−i|. 
  4. Now the ii-th index can no longer be the sink and the jj-th index can no longer be the source. 

The total cost of a transformation is the sum of all the costs in step 33.

For example, array [0,2,3,3][0,2,3,3] can be transformed into a beautiful
array [2,2,2,2][2,2,2,2] with total cost 1⋅|1−3|+1⋅|1−4|=51⋅|1−3|+1⋅|1−4|=5.

An array is called balanced, if it can be transformed into a beautiful array,
and the cost of such transformation is uniquely defined. In other words, the
minimum cost of transformation into a beautiful array equals the maximum cost.

You are given an array a1,a2,…,an of length n, consisting of non-negative
integers. Your task is to find the number of balanced arrays which are
permutations of the given array. Two arrays are considered different, if
elements at some position differ. Since the answer can be large, output it
modulo 109+7.

Input

The first line contains a single integer n (1≤n≤105) — the size of the array.

The second line contains n integers a1,a2,…,an (0≤ai≤109).

Output

Output a single integer — the number of balanced permutations modulo 109+7.

Examples

Input

Copy

    
    
    3
    1 2 3
    

Output

Copy

    
    
    6

Input

Copy

    
    
    4
    0 4 0 4
    

Output

Copy

    
    
    2

Input

Copy

    
    
    5
    0 11 12 13 14
    

Output

Copy

    
    
    120

Note

In the first example, [1,2,3] is a valid permutation as we can consider the
index with value 3 as the source and index with value 1 as the sink. Thus,
after conversion we get a beautiful array [2,2,2], and the total cost would be
2. We can show that this is the only transformation of this array that leads
to a beautiful array. Similarly, we can check for other permutations too.

In the second example, [0,0,4,4] and [4,4,0,0] are balanced permutations.

In the third example, all permutations are balanced.

The problem statement has recently been changed. View the changes.

×

F. Swapping Problem

time limit per test

2 seconds

memory limit per test

512 megabytes

input

standard input

output

standard output

You are given 2 arrays a and b, both of size n. You can swap two elements in b
at most once (or leave it as it is), and you are required to minimize the
value ∑i|ai−bi|.

Find the minimum possible value of this sum.

Input

The first line contains a single integer n (1≤n≤2⋅105).

The second line contains n integers a1,a2,…,an (1≤ai≤109).

The third line contains n integers b1,b2,…,bn (1≤bi≤109).

Output

Output the minimum value of ∑i|ai−bi|.

Examples

Input

Copy

    
    
    5
    5 4 3 2 1
    1 2 3 4 5
    

Output

Copy

    
    
    4

Input

Copy

    
    
    2
    1 3
    4 2
    

Output

Copy

    
    
    2

Note

In the first example, we can swap the first and fifth element in array b, so
that it becomes [5,2,3,4,1].

Therefore, the minimum possible value of this sum would be
|5−5|+|4−2|+|3−3|+|2−4|+|1−1|=4.

In the second example, we can swap the first and second elements. So, our
answer would be 2.

  

Codeforces (c) Copyright 2010-2021 Mike Mirzayanov

The only programming contests Web 2.0 platform

